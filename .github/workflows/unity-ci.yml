---
name: Unity CI (Tests + Windows Build)

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PROJECT_PATH: ReflectiveCausticsProject
  BUILD_NAME: ReflectiveCaustics_PC

jobs:
  test:
    name: Run Unity tests (Linux)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - uses: actions/cache@v4
        with:
          path: ${{ env.PROJECT_PATH }}/Library
          key: Library-${{ hashFiles('ReflectiveCausticsProject/Assets/**', 'ReflectiveCausticsProject/Packages/**', 'ReflectiveCausticsProject/ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Run tests
        timeout-minutes: 10
        id: tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ env.PROJECT_PATH }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: TestResults
          path: ${{ steps.tests.outputs.artifactsPath || 'Logs' }}
          if-no-files-found: ignore

  build-windows:
    name: Build Windows64
    needs: test
    runs-on: windows-2022
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - uses: actions/cache@v4
        with:
          path: ${{ env.PROJECT_PATH }}/Library
          key: Library-${{ hashFiles('ReflectiveCausticsProject/Assets/**', 'ReflectiveCausticsProject/Packages/**', 'ReflectiveCausticsProject/ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Build project (Windows64)
        timeout-minutes: 10
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ env.PROJECT_PATH }}
          targetPlatform: StandaloneWindows64

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUILD_NAME }}_Win64
          path: ${{ env.PROJECT_PATH }}/build/
